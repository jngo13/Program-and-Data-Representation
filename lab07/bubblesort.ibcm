C005	000	jmp	initialize variables
0005	001	dw	array size 5
0000	002	dw	int i = 0
0000	003	dw	int j = 0
0001	004	dw	one
3001	005	load	accumulator = size
6004	006	sub	accumulator = accumulator - 1
4003	007	store	j = accumulator
C00F	008	jmp	start
0048	009	dw	int a[]	
0000	00A	dw	temp = 0
3000	00B	loadit
4000	00C	storeit	
0000	00D	dw	previous
0000	00E	dw	current
3001	00F	load	size
6002	010	sub	accumulator = size - i
E047	011	jmpl	if(accumulator < 0)
D047	012	jmpe	if(accumulator == 0)
3003	013	load	accumulator = j
6002	014	sub	accumulator = j - 1
E042	015	jmpl	if(accumulator < 0)
D042	016	jmpe	if(accumulator == 0)
300B	017	load	load a[]
5009	018	add	a[]	
5003	019	add	j
401B	01A	store	loadit
0000	01B	dw	current
400E	01C	store	current
300B	01D	load	load it
5009	01E	add	a[]
5003	01F	add	j
6004	020	sub	a[j-1]
4022	021	store	loadit
0000	022	dw	previous
400D	023	store	previous
300E	024	load	current
600D	025	sub	a[j] - a[j-1]
E02B	026	jmpl	
3003	027	load	acc = j
6004	028	sub	acc = j - 1
4003	029	store	j = acc
C015	02A	jmp	while(j > i)
300E	02B	load	current
400A	02C	store	temp
300D	02D	load	previous
400E	02E	store	current
300A	02F	load	temp
400D	030	store	previous
3009	031	load	a[]
5003	032	add	j
500C	033	add	store it
4036	034	store	doit
300E	035	load	accumulator = previous
0000	036	doit	sort
3009	037	load	a[]
5003	038	add	accumulator = a[] + j
6004	039	sub	accumulator = acc - 1
500C	03A	add	store it
403D	03B	store	do it
300A	03C	load	accumulator = temp
0000	03D	doit	set
3003	03E	load	accumulator = j
6004	03F	sub	accumulator = j - 1
4003	040	store	j = accumulator
C015	041	jmp	while(j > 1)
3002	042	load	accumulator = i
5004	043	add	accumulator = i + 1
4002	044	store	i = accumulator
C005	045	jmp	j = size - 1	
3048	046	
0000	047	blank space
0002	048	two
0001	049	one
0036	04A	three six
0015	04B	one five
0005	04C	five
